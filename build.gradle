plugins {
    id 'java'
    id 'application'
    id 'org.jetbrains.kotlin.jvm' version '1.9.22'   // ← Fixed
    id 'org.openjfx.javafxplugin' version '0.0.13'
    id 'org.beryx.jlink' version '2.25.0'
}

group 'com.example'
version '1.0-SNAPSHOT'

repositories {
    mavenCentral()
}

ext {
    junitVersion = '5.8.2'
}

sourceCompatibility = '19'
targetCompatibility = '19'

compileKotlin {
    kotlinOptions {
        jvmTarget = '19'  // ← Fixed
    }
}
compileTestKotlin {
    kotlinOptions {
        jvmTarget = '19'
    }
}

application {
    mainModule = 'com.example.hellojavafx'
    mainClass = 'com.example.hellojavafx.HelloApplication'
}

javafx {
    version = '19.0.2.1'  // Use stable instead of EA if possible
    modules = ['javafx.controls', 'javafx.fxml']
}

dependencies {
    implementation "org.jetbrains.kotlin:kotlin-stdlib:1.9.22"


    // SQLite
    implementation("org.xerial:sqlite-jdbc:3.45.3.0")

    // Exposed ORM
    implementation("org.jetbrains.exposed:exposed-core:0.44.1")
    implementation("org.jetbrains.exposed:exposed-dao:0.44.1")
    implementation("org.jetbrains.exposed:exposed-jdbc:0.44.1")

    // Testing
    testImplementation("org.junit.jupiter:junit-jupiter-api:${junitVersion}")
    testRuntimeOnly("org.junit.jupiter:junit-jupiter-engine:${junitVersion}")
}

test {
    useJUnitPlatform()
}

jlink {
    imageZip = project.file("${buildDir}/distributions/app-${javafx.platform.classifier}.zip")
    options = ['--strip-debug', '--compress', '2', '--no-header-files', '--no-man-pages']
    launcher {
        name = 'app'
    }
}

jlinkZip {
    group = 'distribution'
}